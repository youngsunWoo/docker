{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{222:function(e,n,a){\"use strict\";a.r(n);var t=a(0),r=Object(t.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[a(\"h3\",{attrs:{id:\"beanname\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#beanname\"}},[e._v(\"#\")]),e._v(\" \"),a(\"a\",{attrs:{href:\"https://docs.spring.io/spring/docs/5.2.0.RELEASE/spring-framework-reference/core.html#beans-beanname\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"beanname\"),a(\"OutboundLink\")],1)]),e._v(\" \"),a(\"p\",[e._v(\"빈의 식별자는 유일해야한다. (컨테이너 내)\"),a(\"br\"),e._v(\"\\nBean의 Name이나 ID를 명시적으로 설정하지 않으면 컨테이너는 해당 Bean의 고유한 Name 을 생성한다.\")]),e._v(\" \"),a(\"p\",[e._v(\"기본적으로 네이밍은 아래 rule ↓↓↓↓\")]),e._v(\" \"),a(\"blockquote\",[a(\"p\",[e._v(\"The convention is to use the standard Java convention for instance field names when naming beans.\\nThat is, bean names start with a lowercase letter and are camel-cased from there.\")])]),e._v(\" \"),a(\"p\",[e._v(\"빈 네이밍은 자바 표준에 따라 인스터스 필드이름으로 생성.\"),a(\"br\"),e._v(\"\\n빈 네임은 \"),a(\"strong\",[e._v(\"소문자로 시작\")]),e._v(\" \"),a(\"s\",[e._v(\"(잊지말자 삽질의 순간들)\")]),e._v(\" , 카멜케이스로 생성된다.\")]),e._v(\" \"),a(\"p\",[e._v(\"기본적으로 클래스 명으로, 첫글자는 소문자로.\"),a(\"br\"),e._v(\"\\n그러나 첫 번째,두번째 글자가 모두 대문자 인 경우 원래 대소문자 유지(?)\"),a(\"br\"),e._v(\"\\nalias 사용 가능\")]),e._v(\" \"),a(\"h3\",{attrs:{id:\"bean-annotation\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#bean-annotation\"}},[e._v(\"#\")]),e._v(\" \"),a(\"code\",[e._v(\"@Bean\")]),e._v(\" Annotation\")]),e._v(\" \"),a(\"p\",[e._v(\"default, the bean name is the same as the method name\")])])}),[],!1,null,null,null);n.default=r.exports}}]);","extractedComments":[]}